// üèãÔ∏è –ü—Ä–∞–∫—Ç–∏–∫–∞ RxJS

// üîπ –£—Ä–æ–≤–µ–Ω—å 1: –ë–∞–∑–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏

// –ó–∞–¥–∞—á–∞ 1. –¢–∞–π–º–µ—Ä
// –°–¥–µ–ª–∞–π –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π:
// –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≤—ã–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ (0,1,2,...);
// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ 5 –∑–Ω–∞—á–µ–Ω–∏–π.
// üëâ –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥.

import { interval, fromEvent, of, forkJoin, combineLatest } from "rxjs";
import {
  catchError,
  debounceTime,
  startWith,
  take,
  tap,
  map,
  distinctUntilChanged,
  switchMap,
} from "rxjs/operators";

export function timer() {
  interval(1000)
    .pipe(take(5))
    .subscribe((v) => console.log(v));
}

// –ó–∞–¥–∞—á–∞ 2. –ö–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–µ

// –°–¥–µ–ª–∞–π –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π:
// —Å–ª—É—à–∞–µ—Ç –∫–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–µ <button>–ù–∞–∂–º–∏</button>;
// –ø—Ä–∏ –∫–ª–∏–∫–µ –≤—ã–≤–æ–¥–∏—Ç "–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!".

export function clickBtn() {
  const btn = document.querySelector(".attention-btn") as HTMLButtonElement;
  const divEl = document.querySelector(".click-for-btn") as HTMLDivElement;

  if (!btn || !divEl) return;

  const click$ = fromEvent(btn, "click");
  click$.subscribe(() => {
    divEl.textContent = "–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!";
    console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞.");
  });
}

// üîπ –£—Ä–æ–≤–µ–Ω—å 2: –û–ø–µ—Ä–∞—Ç–æ—Ä—ã
// –ó–∞–¥–∞—á–∞ 3. –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
// –°–¥–µ–ª–∞–π –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π:
// –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ <input>;
// –∂–¥—ë—Ç 500 –º—Å –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–≤–æ–¥–∞ (debounceTime);
// –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (distinctUntilChanged).

export function trackInput() {
  const input = document.querySelector(".track-input") as HTMLInputElement;
  const divEl = document.querySelector(
    ".displays-tracked-date",
  ) as HTMLDivElement;

  if (!input) {
    console.warn("–≠–ª–µ–º–µ–Ω—Ç .track-input –Ω–µ –Ω–∞–π–¥–µ–Ω");
    return;
  }

  const input$ = fromEvent<InputEvent>(input, "input").pipe(
    map((event) => (event.target as HTMLInputElement)?.value ?? ""),
    debounceTime(500),
    distinctUntilChanged(),
  );
  const subscription = input$.subscribe((value: string) => {
    if (divEl) {
      divEl.textContent = value;
    }
  });

  window.addEventListener("beforeunload", () => subscription.unsubscribe());
}

// –ó–∞–¥–∞—á–∞ 4. API –∑–∞–ø—Ä–æ—Å

// –°–¥–µ–ª–∞–π –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π:
// –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–µ–ª–∞–µ—Ç AJAX-–∑–∞–ø—Ä–æ—Å –∫
// https://jsonplaceholder.typicode.com/users/1;
// –≤—ã–≤–æ–¥–∏—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (name) –≤ –∫–æ–Ω—Å–æ–ª—å.

import { ajax } from "rxjs/ajax";

export function getUser() {
  const btn = document.querySelector(".ajax-request-btn");
  const divResponseName = document.querySelector(".ajax-response-name");

  if (!btn || !divResponseName) return;

  fromEvent(btn, "click")
    .pipe(
      tap(() => (divResponseName.textContent = "–ó–∞–≥—Ä—É–∑–∫–∞...")),
      switchMap(() =>
        forkJoin([
          ajax.getJSON<{ name: string }>(
            "https://jsonplaceholder.typicode.com/users/1",
          ),
          ajax.getJSON<{ name: string }>(
            "https://jsonplaceholder.typicode.com/users/2",
          ),
        ]).pipe(
          catchError((_) =>
            of([{ name: "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞" }, { name: "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞" }]),
          ),
        ),
      ),
    )
    .subscribe(([user1, user2]) => {
      if (user1.name === "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞" || user2.name === "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞") {
        divResponseName.textContent = "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞";
      } else {
        divResponseName.textContent = `${user1.name} –∏ ${user2.name}`;
      }
    });
}

// üîπ –£—Ä–æ–≤–µ–Ω—å 3: –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–æ–≤
// –ó–∞–¥–∞—á–∞ 5. –î–≤–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞

// –ï—Å—Ç—å –¥–≤–∞ <input>:
// –≤ –ø–µ—Ä–≤–æ–º ‚Äî –∏–º—è;
// –≤–æ –≤—Ç–æ—Ä–æ–º ‚Äî —Ñ–∞–º–∏–ª–∏—è.
// –°–¥–µ–ª–∞–π –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –ª—é–±–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É:
// –ü–æ–ª–Ω–æ–µ –∏–º—è: {–∏–º—è} {—Ñ–∞–º–∏–ª–∏—è}

export function FioInput() {
  const inputFirstname = document.querySelector(
    ".firstname",
  ) as HTMLInputElement;
  const inputLastname = document.querySelector(".lastname") as HTMLInputElement;
  const divEl = document.querySelector(".last-first-name") as HTMLDivElement;

  if (!inputFirstname || !inputLastname || !divEl) {
    console.warn("–≠–ª–µ–º–µ–Ω—Ç—ã DOM –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
    return;
  }

  const firstName$ = fromEvent(inputFirstname, "input").pipe(
    map((event) => (event.target as HTMLInputElement).value),
    startWith(""), // —á—Ç–æ–±—ã combineLatest —Å—Ä–∞–±–æ—Ç–∞–ª —Å—Ä–∞–∑—É
  );

  const lastname$ = fromEvent(inputLastname, "input").pipe(
    map((event) => (event.target as HTMLInputElement).value),
    startWith(""),
  );

  combineLatest([firstName$, lastname$])
    .pipe(map(([first, last]) => `–ü–æ–ª–Ω–æ–µ –∏–º—è: ${first} ${last}`))
    .subscribe((fullname) => {
      divEl.textContent = fullname;
    });
}
